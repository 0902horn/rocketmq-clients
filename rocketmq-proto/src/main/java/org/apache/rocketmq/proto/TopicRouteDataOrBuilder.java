// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rocketmq.proto

package org.apache.rocketmq.proto;

public interface TopicRouteDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rocketmq.rpc.api.TopicRouteData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string order_topic_configuration = 1;</code>
   * @return The orderTopicConfiguration.
   */
  java.lang.String getOrderTopicConfiguration();
  /**
   * <code>string order_topic_configuration = 1;</code>
   * @return The bytes for orderTopicConfiguration.
   */
  com.google.protobuf.ByteString
      getOrderTopicConfigurationBytes();

  /**
   * <code>repeated .rocketmq.rpc.api.QueueData queue_data = 2;</code>
   */
  java.util.List<org.apache.rocketmq.proto.QueueData> 
      getQueueDataList();
  /**
   * <code>repeated .rocketmq.rpc.api.QueueData queue_data = 2;</code>
   */
  org.apache.rocketmq.proto.QueueData getQueueData(int index);
  /**
   * <code>repeated .rocketmq.rpc.api.QueueData queue_data = 2;</code>
   */
  int getQueueDataCount();
  /**
   * <code>repeated .rocketmq.rpc.api.QueueData queue_data = 2;</code>
   */
  java.util.List<? extends org.apache.rocketmq.proto.QueueDataOrBuilder> 
      getQueueDataOrBuilderList();
  /**
   * <code>repeated .rocketmq.rpc.api.QueueData queue_data = 2;</code>
   */
  org.apache.rocketmq.proto.QueueDataOrBuilder getQueueDataOrBuilder(
      int index);

  /**
   * <code>repeated .rocketmq.rpc.api.BrokerData broker_data = 3;</code>
   */
  java.util.List<org.apache.rocketmq.proto.BrokerData> 
      getBrokerDataList();
  /**
   * <code>repeated .rocketmq.rpc.api.BrokerData broker_data = 3;</code>
   */
  org.apache.rocketmq.proto.BrokerData getBrokerData(int index);
  /**
   * <code>repeated .rocketmq.rpc.api.BrokerData broker_data = 3;</code>
   */
  int getBrokerDataCount();
  /**
   * <code>repeated .rocketmq.rpc.api.BrokerData broker_data = 3;</code>
   */
  java.util.List<? extends org.apache.rocketmq.proto.BrokerDataOrBuilder> 
      getBrokerDataOrBuilderList();
  /**
   * <code>repeated .rocketmq.rpc.api.BrokerData broker_data = 3;</code>
   */
  org.apache.rocketmq.proto.BrokerDataOrBuilder getBrokerDataOrBuilder(
      int index);

  /**
   * <code>map&lt;string, .rocketmq.rpc.api.FilterServerAddress&gt; filter_server_addresses = 4;</code>
   */
  int getFilterServerAddressesCount();
  /**
   * <code>map&lt;string, .rocketmq.rpc.api.FilterServerAddress&gt; filter_server_addresses = 4;</code>
   */
  boolean containsFilterServerAddresses(
      java.lang.String key);
  /**
   * Use {@link #getFilterServerAddressesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.apache.rocketmq.proto.FilterServerAddress>
  getFilterServerAddresses();
  /**
   * <code>map&lt;string, .rocketmq.rpc.api.FilterServerAddress&gt; filter_server_addresses = 4;</code>
   */
  java.util.Map<java.lang.String, org.apache.rocketmq.proto.FilterServerAddress>
  getFilterServerAddressesMap();
  /**
   * <code>map&lt;string, .rocketmq.rpc.api.FilterServerAddress&gt; filter_server_addresses = 4;</code>
   */

  org.apache.rocketmq.proto.FilterServerAddress getFilterServerAddressesOrDefault(
      java.lang.String key,
      org.apache.rocketmq.proto.FilterServerAddress defaultValue);
  /**
   * <code>map&lt;string, .rocketmq.rpc.api.FilterServerAddress&gt; filter_server_addresses = 4;</code>
   */

  org.apache.rocketmq.proto.FilterServerAddress getFilterServerAddressesOrThrow(
      java.lang.String key);
}
