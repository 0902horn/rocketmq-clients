<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.apache.rocketmq</groupId>
    <artifactId>rocketmq-java</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <modules>
        <module>rocketmq-proto</module>
        <module>rocketmq-example</module>
        <module>rocketmq-utility</module>
        <module>rocketmq-client</module>
    </modules>

    <properties>
        <maven.compiler.release>6</maven.compiler.release>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- <revision>1.0.0-SNAPSHOT</revision> -->
        <project.root>${basedir}</project.root>

        <custom-made.version.suffix>rocketmq-SNAPSHOT</custom-made.version.suffix>
        <!-- customized dependencies-->
        <grpc-base.version>1.35.0</grpc-base.version>
        <protocol-buffer-base.version>3.12.0</protocol-buffer-base.version>
        <opentelemetry-base.version>1.2.0</opentelemetry-base.version>
        <opentelemetry-proto-base.version>1.2.0-alpha</opentelemetry-proto-base.version>

        <slf4j.version>1.7.30</slf4j.version>
        <logback-shaded.version>1.2.3-SNAPSHOT</logback-shaded.version>
        <guava.version>20.0</guava.version>
        <annotaion-api.version>1.3.2</annotaion-api.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <commons-codec.version>1.11</commons-codec.version>
        <jna.version>5.7.0</jna.version>
        <lombk.version>1.18.16</lombk.version>
        <testng.version>6.8.21</testng.version>
        <mockito.version>2.28.2</mockito.version>
        <powermockito.version>2.0.9</powermockito.version>

        <!-- plugin -->
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <!-- <flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version> -->
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
        <spotbugs-plugin.version>4.2.3</spotbugs-plugin.version>
        <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>rocketmq-proto</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>rocketmq-example</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>rocketmq-utility</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>rocketmq-thin-client</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>rocketmq-thin-client</artifactId>
                <classifier>noshade</classifier>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>logback-shaded</artifactId>
                <version>${logback-shaded.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protocol-buffer-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-services</artifactId>
                <version>${grpc-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-api</artifactId>
                <version>${opentelemetry-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-proto</artifactId>
                <version>${opentelemetry-proto-base.version}-${custom-made.version.suffix}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-protobuf</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-stub</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk</artifactId>
                <version>${opentelemetry-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-exporter-otlp</artifactId>
                <version>${opentelemetry-base.version}-${custom-made.version.suffix}</version>
            </dependency>

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${annotaion-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform</artifactId>
                <version>${jna.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombk.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-testng</artifactId>
                <version>${powermockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>coverage-check</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>

                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/apache/rocketmq/v1/*</exclude>
                        <exclude>**/com/google/v1/*</exclude>
                    </excludes>
                    <rules>
                        <rule>
                            <element>CLASS</element>
                            <excludes>
                                <exclude>JAVAC.SYNTHCLASS</exclude>
                                <exclude>JAVAC.SYNTHMETH</exclude>
                            </excludes>
                        </rule>
                        <rule>
                            <element>BUNDLE</element>
                            <limits>
                                <limit>
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.00</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                </configuration>
            </plugin>
            <!-- <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->

<!--            <plugin>-->
<!--                <groupId>com.github.spotbugs</groupId>-->
<!--                <artifactId>spotbugs-maven-plugin</artifactId>-->
<!--                <version>${spotbugs-plugin.version}</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>check</id>-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <failOnError>true</failOnError>-->
<!--                    <fork>false</fork>-->
<!--                    <spotbugsXmlOutput>true</spotbugsXmlOutput>-->
<!--                    <excludeFilterFile>${project.root}/style/spotbugs-suppressions.xml-->
<!--                    </excludeFilterFile>-->
<!--                    <threshold>Low</threshold>-->
<!--                    <effort>Max</effort>-->
<!--                </configuration>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <encoding>UTF-8</encoding>
                    <configLocation>style/checkstyle.xml</configLocation>
                    <excludes>**/apache/rocketmq/v1/*,**/com/google/rpc/*</excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>