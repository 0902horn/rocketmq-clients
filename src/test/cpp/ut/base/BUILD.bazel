#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
load("@rules_cc//cc:defs.bzl", "cc_test")
cc_test(
    name = "histogram_test",
    srcs = [
        "HistogramTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "mix_all_test",
    srcs = [
        "MixAllTest.cpp",
    ],
    deps = [
        "//api:rocketmq_interface",
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "rate_limiter_test",
    srcs = [
        "RateLimiterTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "util_all_test",
    srcs = [
        "UtilAllTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
        "@zlib//:zlib",
        "@asio//:asio",
    ],
)

cc_test(
    name = "http_client_test",
    srcs = [
        "HttpClientTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "unique_id_generator_test",
    srcs = [
        "UniqueIdGeneratorTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "host_info_test",
    srcs = [
        "HostInfoTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "message_test",
    srcs = [
        "MQMessageTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "message_ext_test",
    srcs = [
        "MQMessageExtTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "top_addressing_test",
    srcs = [
        "TopAddressingTest.cpp",
    ],
    deps = [
        "//src/main/cpp/base:base_library",
        "//src/main/cpp/base/mocks:base_mocks",
        "@com_google_googletest//:gtest_main",
    ]
)

cc_test(
    name = "invocation_context_test",
    srcs = [
        "InvocationContextTest.cpp",
    ],
    deps = [
        "//src/main/cpp/client:client_library",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "thread_pool_test",
    srcs = [
        "ThreadPoolTest.cpp",
    ],
    deps = [
        "//api:rocketmq_interface",
        "//src/main/cpp/base:base_library",
        "@com_google_googletest//:gtest_main",        
    ],
)